@page "/team-member"
@using Blazorise
@using Avatar.Web.Models
@using Avatar.Web.Modules.ApiAccess.Handlers
@using Avatar.Web.Components
@using Avatar.Web.Models
@inject ITeamMemberApiHandler teamMemberApiHandler
@inject ITeamMemberSkillApiHandler teamMemberSkillApiHandler
@inject IJSRuntime JSRuntime

<Button Color="Color.Primary" Clicked="@(() => ShowModal(null))" Class="mb-3">
    <Icon Name="IconName.Add" /> Add New Team Member
</Button>

<Table Hoverable="true" Bordered="true" Responsive="true">
    <TableHeader ThemeContrast="ThemeContrast.Light">
        <TableRow>
            <TableHeaderCell>Id</TableHeaderCell>
            <TableHeaderCell>First Name</TableHeaderCell>
            <TableHeaderCell>Last Name</TableHeaderCell>
            <TableHeaderCell>Title</TableHeaderCell>
            <TableHeaderCell>Actions</TableHeaderCell>
        </TableRow>
    </TableHeader>
    <TableBody>
        @if (TeamMembers.Any())
        {
            @foreach (var member in TeamMembers)
            {
                <TableRow>
                    <TableRowCell>@member.Id</TableRowCell>
                    <TableRowCell>@member.FirstName</TableRowCell>
                    <TableRowCell>@member.LastName</TableRowCell>
                    <TableRowCell>@member.Title</TableRowCell>
                    <TableRowCell>
                        <Div>
                            <Button Color="Color.Info" Outline="true" Clicked="@(() => ViewMember(member))">
                                <img class="img-icon" src="/images/show.png" />
                            </Button>
                            <Button Color="Color.Warning" Outline="true" Clicked="@(() => ShowModal(member))">
                                <img class="img-icon" src="/images/edit.png" />
                            </Button>
                            <Button Color="Color.Danger" Outline="true" Clicked="@(() => DeleteMember(member))">
                                <img class="img-icon" src="/images/delete.png" />
                            </Button>
                        </Div>
                    </TableRowCell>
                </TableRow>
            }
        }
        else
        {
            <TableRow>
                <TableRowCell ColumnSpan="6" Class="text-center">
                    <p>No team members found.</p>
                </TableRowCell>
            </TableRow>
        }
    </TableBody>
</Table>

<!-- Modal for Add/Edit -->
<Modal @ref="@editModal">
    <ModalContent>
        <ModalHeader>
            <ModalTitle>@(selectedMember?.Id == 0 ? "Add New Team Member" : "Edit Team Member")</ModalTitle>
            <CloseButton Clicked="@HideModal" Style="background-color:transparent;border:none;" />
        </ModalHeader>
        <ModalBody>
            <Validations @ref="@validations" Mode="ValidationMode.Manual" Model="@selectedMember">
               <Validation>
                   <Field>
                        <FieldLabel>First Name*</FieldLabel>
                        <TextEdit @bind-Text="@selectedMember.FirstName"/>
                        <ValidationError For="@(() => selectedMember.FirstName)" />
                    </Field>
               </Validation>
               <Validation>
                    <Field>
                        <FieldLabel>Last Name*</FieldLabel>
                        <TextEdit @bind-Text="@selectedMember.LastName"/>
                        <ValidationError For="@(() => selectedMember.LastName)" />
                    </Field>
                </Validation>
                <Validation>
                    <Field>
                        <FieldLabel>Title*</FieldLabel>
                        <TextEdit @bind-Text="@selectedMember.Title"/>
                        <ValidationError For="@(() => selectedMember.Title)" />
                    </Field>
                </Validation>
            </Validations>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Cancel</Button>
            <Button Color="Color.Primary" Clicked="@SaveMember">Save</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<!-- Modal for View -->
<Modal @ref="@viewModal">
    <ModalContent>
        <ModalHeader>
            <ModalTitle>Team Member Details</ModalTitle>
            <CloseButton Clicked="@HideViewModal" Style="background-color:transparent;border:none;" />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Id</FieldLabel>
                <TextEdit ReadOnly="true" Text="@selectedMember.Id.ToString()" />
            </Field>
            <Field>
                <FieldLabel>First Name</FieldLabel>
                <TextEdit ReadOnly="true" Text="@selectedMember.FirstName" />
            </Field>
            <Field>
                <FieldLabel>Last Name</FieldLabel>
                <TextEdit ReadOnly="true" Text="@selectedMember.LastName" />
            </Field>
            <Field>
                <FieldLabel>Title</FieldLabel>
                <TextEdit ReadOnly="true" Text="@selectedMember.Title" />
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideViewModal">Close</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<AlertModal @ref="alertModal" Title="Alert" Message=@Message />
<ConfirmDialog @ref="confirmDialogRef" AcceptLabel="Yes" DeclineLabel="No"
OnConfirmationChanged="ConfirmDeleteChanged">
    <HeaderContent>
        <p class="m-0">Confirm Action</p>
    </HeaderContent>
    <BodyContent>
        <p class="m-0">Are you sure you want to remove this team member?</p>
    </BodyContent>
</ConfirmDialog>

