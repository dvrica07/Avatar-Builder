@page "/team-member-skill"
@using Blazorise
@using Avatar.Web.Models
@using Avatar.Web.Modules.ApiAccess.Handlers
@using Avatar.Web.Components
@using static Avatar.Framework.Enums.Enums
@inject ITeamMemberSkillApiHandler teamMemberSkillApiHandler
@inject ISkillApiHandler skillApiHandler
@inject ITeamMemberApiHandler teamMemberApiHandler
@inject IJSRuntime JSRuntime


<Div Class="skill-builder-section">
    <Row>
        <Column ColumnSize="ColumnSize.Is4">
            <div class="team-member-sidebar">
                <div class="sidebar-header">
                    <h4>Team Members</h4>
                </div>
                <div class="team-member-list">
                    @foreach (var member in TeamMembers)
                    {
                        <div class="team-member-card @(selectedTeamMember?.Id == member.Id ? "active" : "")" 
                        @onclick="@(() => SelectTeamMember(member))">
                            <div class="member-avatar">
                                <span>@member.FirstName[0]@member.LastName[0]</span>
                            </div>
                            <div class="member-info">
                                <div class="member-name">@member.FirstName @member.LastName</div>
                                <div class="member-title">@member.Title</div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </Column>
        <Column Class="profile-details" ColumnSize="ColumnSize.Is8">
            @if (selectedTeamMember.LastName != null)
            {
                <div class="profile-header">
                    <h3>@selectedTeamMember.FirstName @selectedTeamMember.LastName</h3>
                    <p class="text-muted mb-4">@selectedTeamMember.Title</p>

                    <div class="skills-table">
                        <h5 class="mb-3">Skills</h5>
                        @if (TeamMemberSkills.Any())
                        {
                            <Table Hoverable="true" Bordered="true" Responsive="true">
                                <TableHeader ThemeContrast="ThemeContrast.Light">
                                    <TableRow>
                                        <TableHeaderCell>Skill</TableHeaderCell>
                                        <TableHeaderCell>Level</TableHeaderCell>
                                        <TableHeaderCell>Actions</TableHeaderCell>
                                    </TableRow>
                                </TableHeader>
                                <TableBody>
                                    @foreach (var assignment in TeamMemberSkills)
                                    {
                                        <TableRow>
                                            <TableRowCell>@GetSkillName(assignment.SkillId)</TableRowCell>
                                            <TableRowCell>@assignment.Level</TableRowCell>
                                            <TableRowCell>
                                                <Div>
                                                    <Button Color="Color.Warning" Outline="true" Clicked="@(() => ShowModal(assignment))">
                                                        <img class="img-icon" src="/images/show.png" />
                                                    </Button>
                                                    <Button Color="Color.Warning" Outline="true" Clicked="@(() => ShowEditModal(assignment))">
                                                        <img class="img-icon" src="/images/edit.png" />
                                                    </Button>
                                                    <Button Color="Color.Danger" Outline="true" Clicked="@(() => DeleteAssignment(assignment))">
                                                        <img class="img-icon" src="/images/delete.png" />
                                                    </Button>
                                                </Div>
                                            </TableRowCell>
                                        </TableRow>
                                    }
                                </TableBody>
                            </Table>
                            <Button Color="Color.Primary" Clicked="@ShowCreateModal" Class="mt-3" Margin=Margin.Is3.FromTop>
                                <Icon Name="IconName.Add" /> Assign Skill to Team Member
                            </Button>
                        }
                        else
                        {
                            <div class="no-skills">
                                <Icon Name="IconName.InfoCircle" Size="IconSize.X2" />
                                <p>No skills assigned yet. Click "Add Skill" to get started.</p>
                                <Button Color="Color.Primary" Clicked="@ShowCreateModal" Class="mt-3" Margin=Margin.Is3.FromTop>
                                    <Icon Name="IconName.Add" /> Assign Skill
                                </Button>
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="no-member-selected">
                    <h4>Select a Team Member</h4>
                    <p>Choose a team member from the list to view or edit their skills profile.</p>
                </div>
            }
        </Column>
    </Row>
</Div>
<!-- Modal: Create Skill Assignment -->

<Modal @ref="@createModal">
    <ModalContent>
        <ModalHeader>
            <ModalTitle>Assign New Skill</ModalTitle>
            <CloseButton Clicked="@HideCreateModal" />
        </ModalHeader>
        <ModalBody>
            <Validations @ref="@validations" Mode="ValidationMode.Manual" Model="@selectedAssignment">
                <Validation>
                    <Field>
                        <FieldLabel>Skill</FieldLabel>
                        <Select class="dropdown-field" TValue="int" @bind-SelectedValue="@selectedAssignment.SkillId" Style="width:100%; padding:8px;">
                            <SelectItem Value="0">Select Skill</SelectItem>
                            @foreach (var skill in FilteredSkills)
                            {
                                <SelectItem Value="@skill.Id">@skill.Name</SelectItem>
                            }
                        </Select>
                        <ValidationError For="@(() => selectedAssignment.SkillId)" />
                    </Field>
                </Validation>
                <Validation>
                    <Field>
                        <FieldLabel>Skill</FieldLabel>
                        <Select class="dropdown-field" TValue="ProficiencyLevel" @bind-SelectedValue="@selectedAssignment.Level" Style="width:100%; padding:8px;">
                            <SelectItem Value="0">Select Level</SelectItem>
                            @foreach (var level in Enum.GetNames(typeof(ProficiencyLevel)))
                            {
                                <SelectItem Value="@level">@level</SelectItem>
                            }
                        </Select>
                        <ValidationError For="@(() => selectedAssignment.Level)" />
                    </Field>
                </Validation>
            </Validations>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideCreateModal">Cancel</Button>
            <Button Color="Color.Primary" Clicked="@SaveAssignment">Save</Button>
        </ModalFooter>
    </ModalContent>
</Modal>
<!-- Modal: Edit Skill Assignment -->
<Modal @ref="@editModal">
    <ModalContent>
        <ModalHeader>
            <ModalTitle>Edit Skill Level</ModalTitle>
            <CloseButton Clicked="@HideEditModal" />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Skill</FieldLabel>
                <p>@GetSkillName(selectedAssignment.SkillId)</p>
            </Field>
            <Field>
                   <FieldLabel>Level</FieldLabel>
                   <Select class="dropdown-field" TValue="ProficiencyLevel" @bind-SelectedValue="@selectedAssignment.Level" Style="width:100%; padding:8px;">
                       <SelectItem Value="0">Select Level</SelectItem>
                    @foreach (var level in Enum.GetNames(typeof(ProficiencyLevel)))
                       {
                           <SelectItem Value="@level">@level</SelectItem>
                       }
                   </Select>
                   <ValidationError For="@(() => selectedAssignment.Level)" />
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideEditModal">Cancel</Button>
            <Button Color="Color.Primary" Clicked="@UpdateAssignment">Update</Button>
        </ModalFooter>
    </ModalContent>
</Modal>


<AlertModal @ref="alertModal" Title="Alert" Message=@Message />
<ConfirmDialog @ref="confirmDialogRef" AcceptLabel="Yes" DeclineLabel="No"
OnConfirmationChanged="ConfirmDeleteChanged">
    <HeaderContent>
        <p class="m-0">Confirm Action</p>
    </HeaderContent>
    <BodyContent>
        <p class="m-0">Are you sure you want to remove this skill assignment?</p>
    </BodyContent>
</ConfirmDialog>
